import pandas as pd
# !pip install fredapi
from fredapi import Fred
import numpy as np
import matplotlib.pyplot as plt
import json as js

# Inflation Rate Data
us_inflation_url = pd.read_html("https://www.macrotrends.net/countries/USA/united-states/inflation-rate-cpi")
inlfation_historical = us_inflation_url[1].iloc[0:22, [0, 1]]
inlfation_table = pd.DataFrame(inlfation_historical)
inlfation_table.columns = ["Year", "Inflation Rate"]
inlfation_table['Inflation Rate'] = inlfation_table["Inflation Rate"].str[:-1] #remove % from inflation rate
inlfation_table['Inflation Rate'] = inlfation_table['Inflation Rate'].astype(float) #change data type of inflation to float


# Interest Rate Data
json_open = open("package.json") #open json file
data = js.load(json_open) #load json file
fred = Fred(api_key = data["api_key"]) #api call from json data
data = fred.get_series('MORTGAGE30US', frequency='a') #generate series
#d for daily, w for weekly, m for monthly, q for quarterly, a for annually
# interest_rates = data.iloc[-23:] #get data
df = pd.DataFrame(data, columns={"Interest Rates"}) #create dataframe 
df['Date'] = df.index #df.reset_index(level=0) to reset then rename it after #date column
df['Date'] = df['Date'].astype(str) #convert date column to str
df['Year'] = df["Date"].str[:4] #extract first 4 characters from date
interest_rates = df.iloc[-23:-1, [0, 2]]
interest_rates['Year'] = interest_rates['Year'].astype(int)


# S&P 500 Index Data
snp_url = pd.read_html("https://www.macrotrends.net/2526/sp-500-historical-annual-returns")
snp_data = snp_url[0].iloc[0:23, [0,5]]
snp_data.columns = ["Year", "S&P 500 Closing Price"]


# Merge 3 tables
first_two = pd.merge(inlfation_table, interest_rates, how="left", on="Year") #left joing first 2 tables
all_data = pd.merge(first_two, snp_data, how="left", on="Year") #left joing third table
all_data['S&P 500 Closing Price adjusted to inflation'] = all_data['S&P 500 Closing Price'] * (1-all_data['Inflation Rate']/100)
all_data['S&P 500 Closing Price adjusted to inflation'] = all_data['S&P 500 Closing Price adjusted to inflation'].round(2)



# Top plot
fig,ax1 = plt.subplots(figsize=[20,15])
ln1 = ax1.plot(all_data['Year'], all_data['S&P 500 Closing Price'], label = "S&P 500 Index (USD)", marker = "o", markerfacecolor = "r", color="r")
plt.title("Alaa's Plot")

# ax1.set_xlabel("Year", fontsize=15)
ax1.set_ylabel("S&P500 Index (USD)", fontsize=20)
ax1.grid()
ax2=ax1.twinx()
ln2 = ax2.plot(all_data['Year'], all_data['Interest Rates'], label="Interest Rate (%)", marker="o", markerfacecolor="b", color="b")
ax2.set_ylabel("Interest Rate (%)", fontsize=20)

#legends
leg = ln1 + ln2
labs = [l.get_label() for l in leg]
ax1.legend(leg, labs, loc=1)
plt.xticks(all_data['Year'], size=12)
plt.show()

# Bottom Plot
fig, ax = plt.subplots(figsize=(16,8))
# plt.figure(figsize=(16.3,8))
plt.plot(all_data['Year'],all_data['Inflation Rate'], label="Inflation Rate", marker="o", markerfacecolor="k", color="k")
plt.ylabel("Inflation Rate", fontsize=20)
plt.grid()
plt.xticks(all_data['Year'], size=10)
plt.xlabel("Year", fontsize=20)

for index in range(len(all_data['Year'])):
    ax.text(all_data['Year'][index], 
            all_data['Inflation Rate'][index], 
            all_data['Inflation Rate'][index], 
            size=12)

plt.show()
